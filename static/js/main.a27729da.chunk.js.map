{"version":3,"sources":["components/MeetingFooter/MeetingFooter.component.js","components/Shared/Card/Card.component.js","components/Participants/Participant/Participant.component.js","components/Participants/Participants.component.js","store/actiontypes.js","store/actioncreator.js","components/MainScreen/MainScreen.component.js","server/firebase.js","App.js","reportWebVitals.js","server/peerConnection.js","store/reducer.js","index.js"],"names":["MeetingFooter","props","useState","mic","video","screen","streamState","setStreamState","setScreenState","isEnabled","currentState","useEffect","onMicClick","onVideoClick","className","data-tip","onClick","icon","faMicrophone","faMicrophoneSlash","title","faVideo","faVideoSlash","onScreenClick","disabled","faDesktop","Card","children","Participant","curentIndex","currentParticipant","hideVideo","videoRef","showAvatar","currentUser","ref","id","autoPlay","playsInline","audio","style","background","avatarColor","name","connect","state","participants","stream","mainStream","useRef","participantKey","Object","keys","current","srcObject","muted","values","gridCol","length","gridColSize","gridRowSize","Math","ceil","screenPresenter","find","element","map","index","pc","peerConnection","remoteStream","MediaStream","ontrack","event","streams","getTracks","forEach","track","addTrack","videElement","document","getElementById","SET_MAIN_STREAM","ADD_PARTICIPANT","REMOVE_PARTICIPANT","SET_USER","UPDATE_USER","UPDATE_PARTICIPANT","setMainStream","type","payload","dispatch","updateUser","user","participantRef","updateStream","key","sender","getSenders","s","kind","replaceTrack","getVideoTracks","onScreenShareEnd","a","navigator","mediaDevices","getUserMedia","localStream","enabled","getDisplayMedia","mediaStream","mediaSource","onended","micEnabled","getAudioTracks","videoEnabled","firebase","initializeApp","apiKey","databaseURL","db","firepadRef","database","userName","prompt","roomId","URLSearchParams","window","location","search","get","child","push","history","replaceState","addParticipant","newUser","setUser","removeParticipant","userId","updateParticipant","getUserStream","connectedRef","on","snap","val","defaultPreference","userStatusRef","preferences","onDisconnect","remove","isUserSet","isStreamSet","preferenceSnap","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","updatePreference","preference","currentParticipantRef","setTimeout","update","createOffer","receiverId","createdID","onicecandidate","candidate","toJSON","offerDescription","setLocalDescription","offer","sdp","set","initializeListensers","currentUserRef","snapshot","data","store","getState","setRemoteDescription","RTCSessionDescription","createAnswer","addIceCandidate","RTCIceCandidate","answer","answerDescription","otherUserId","participantRef1","defaultUserState","servers","iceServers","urls","iceCandidatePoolSize","generateColor","floor","random","toString","addConnection","RTCPeerConnection","newUserId","currentUserId","offerIds","sort","b","localeCompare","createStore","action","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a27729da.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMicrophone,\n  faVideo,\n  faDesktop,\n  faVideoSlash,\n  faMicrophoneSlash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ReactTooltip from \"react-tooltip\";\nimport \"./MeetingFooter.css\";\nconst MeetingFooter = (props) => {\n  const [streamState, setStreamState] = useState({\n    mic: true,\n    video: false,\n    screen: false,\n  });\n  const micClick = () => {\n    setStreamState((currentState) => {\n      return {\n        ...currentState,\n        mic: !currentState.mic,\n      };\n    });\n  };\n\n  const onVideoClick = () => {\n    setStreamState((currentState) => {\n      return {\n        ...currentState,\n        video: !currentState.video,\n      };\n    });\n  };\n\n  const onScreenClick = () => {\n    props.onScreenClick(setScreenState);\n  };\n\n  const setScreenState = (isEnabled) => {\n    setStreamState((currentState) => {\n      return {\n        ...currentState,\n        screen: isEnabled,\n      };\n    });\n  };\n  useEffect(() => {\n    props.onMicClick(streamState.mic);\n  }, [streamState.mic]);\n  useEffect(() => {\n    props.onVideoClick(streamState.video);\n  }, [streamState.video]);\n  return (\n    <div className=\"meeting-footer\">\n      <div\n        className={\"meeting-icons \" + (!streamState.mic ? \"active\" : \"\")}\n        data-tip={streamState.mic ? \"Mute Audio\" : \"Unmute Audio\"}\n        onClick={micClick}\n      >\n        <FontAwesomeIcon\n          icon={!streamState.mic ? faMicrophoneSlash : faMicrophone}\n          title=\"Mute\"\n        />\n      </div>\n      <div\n        className={\"meeting-icons \" + (!streamState.video ? \"active\" : \"\")}\n        data-tip={streamState.video ? \"Hide Video\" : \"Show Video\"}\n        onClick={onVideoClick}\n      >\n        <FontAwesomeIcon icon={!streamState.video ? faVideoSlash : faVideo} />\n      </div>\n      <div\n        className=\"meeting-icons\"\n        data-tip=\"Share Screen\"\n        onClick={onScreenClick}\n        disabled={streamState.screen}\n      >\n        <FontAwesomeIcon icon={faDesktop} />\n      </div>\n      <ReactTooltip />\n    </div>\n  );\n};\n\nexport default MeetingFooter;\n","import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"../../Shared/Card/Card.component\";\nimport { faMicrophoneSlash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Participant.css\";\n\nexport const Participant = (props) => {\n  const {\n    curentIndex,\n    currentParticipant,\n    hideVideo,\n    videoRef,\n    showAvatar,\n    currentUser,\n  } = props;\n  if (!currentParticipant) return <></>;\n  return (\n    <div className={`participant ${hideVideo ? \"hide\" : \"\"}`}>\n      <Card>\n        <video\n          ref={videoRef}\n          className=\"video\"\n          id={`participantVideo${curentIndex}`}\n          autoPlay\n          playsInline\n        ></video>\n        {!currentParticipant.audio && (\n          <FontAwesomeIcon\n            className=\"muted\"\n            icon={faMicrophoneSlash}\n            title=\"Muted\"\n          />\n        )}\n        {showAvatar && (\n          <div\n            style={{ background: currentParticipant.avatarColor }}\n            className=\"avatar\"\n          >\n            {currentParticipant.name[0]}\n          </div>\n        )}\n        <div className=\"name\">\n          {currentParticipant.name}\n          {currentUser ? \"(You)\" : \"\"}\n        </div>\n      </Card>\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from \"react\";\nimport \"./Participants.css\";\nimport { connect } from \"react-redux\";\nimport { Participant } from \"./Participant/Participant.component\";\n\nconst Participants = (props) => {\n  const videoRef = useRef(null);\n  let participantKey = Object.keys(props.participants);\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.srcObject = props.stream;\n      videoRef.current.muted = true;\n    }\n  }, [props.currentUser, props.stream]);\n\n  const currentUser = props.currentUser\n    ? Object.values(props.currentUser)[0]\n    : null;\n\n  let gridCol =\n    participantKey.length === 1 ? 1 : participantKey.length <= 4 ? 2 : 4;\n  const gridColSize = participantKey.length <= 4 ? 1 : 2;\n  let gridRowSize =\n    participantKey.length <= 4\n      ? participantKey.length\n      : Math.ceil(participantKey.length / 2);\n\n  const screenPresenter = participantKey.find((element) => {\n    const currentParticipant = props.participants[element];\n    return currentParticipant.screen;\n  });\n\n  if (screenPresenter) {\n    gridCol = 1;\n    gridRowSize = 2;\n  }\n  const participants = participantKey.map((element, index) => {\n    const currentParticipant = props.participants[element];\n    const isCurrentUser = currentParticipant.currentUser;\n    if (isCurrentUser) {\n      return null;\n    }\n    const pc = currentParticipant.peerConnection;\n    const remoteStream = new MediaStream();\n    let curentIndex = index;\n    if (pc) {\n      pc.ontrack = (event) => {\n        event.streams[0].getTracks().forEach((track) => {\n          remoteStream.addTrack(track);\n        });\n        const videElement = document.getElementById(\n          `participantVideo${curentIndex}`\n        );\n        if (videElement) videElement.srcObject = remoteStream;\n      };\n    }\n\n    return (\n      <Participant\n        key={curentIndex}\n        currentParticipant={currentParticipant}\n        curentIndex={curentIndex}\n        hideVideo={screenPresenter && screenPresenter !== element}\n        showAvatar={\n          !currentParticipant.video &&\n          !currentParticipant.screen &&\n          currentParticipant.name\n        }\n      />\n    );\n  });\n  return (\n    <div\n      style={{\n        \"--grid-size\": gridCol,\n        \"--grid-col-size\": gridColSize,\n        \"--grid-row-size\": gridRowSize,\n      }}\n      className={`participants`}\n    >\n      {participants}\n      <Participant\n        currentParticipant={currentUser}\n        curentIndex={participantKey.length}\n        hideVideo={screenPresenter && !currentUser.screen}\n        videoRef={videoRef}\n        showAvatar={currentUser && !currentUser.video && !currentUser.screen}\n        currentUser={true}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    participants: state.participants,\n    currentUser: state.currentUser,\n    stream: state.mainStream,\n  };\n};\n\nexport default connect(mapStateToProps)(Participants);\n","export const SET_MAIN_STREAM = \"SET_MAIN_STREAM\";\nexport const ADD_PARTICIPANT = \"ADD_PARTICIPANT\";\nexport const REMOVE_PARTICIPANT = \"REMOVE_PARTICIPANT\";\nexport const SET_USER = \"SET_USER\";\nexport const UPDATE_USER = \"UPDATE_USER\";\nexport const UPDATE_PARTICIPANT = \"UPDATE_PARTICIPANT\";\n","import {\n  SET_MAIN_STREAM,\n  ADD_PARTICIPANT,\n  SET_USER,\n  REMOVE_PARTICIPANT,\n  UPDATE_USER,\n  UPDATE_PARTICIPANT,\n} from \"./actiontypes\";\n\nexport const setMainStream = (stream) => {\n  return {\n    type: SET_MAIN_STREAM,\n    payload: {\n      mainStream: stream,\n    },\n  };\n};\n\nexport const setUser = (user) => {\n  return {\n    type: SET_USER,\n    payload: {\n      currentUser: user,\n    },\n  };\n};\n\nexport const addParticipant = (user) => {\n  return {\n    type: ADD_PARTICIPANT,\n    payload: {\n      newUser: user,\n    },\n  };\n};\n\nexport const updateUser = (user) => {\n  return {\n    type: UPDATE_USER,\n    payload: {\n      currentUser: user,\n    },\n  };\n};\n\nexport const updateParticipant = (user) => {\n  return {\n    type: UPDATE_PARTICIPANT,\n    payload: {\n      newUser: user,\n    },\n  };\n};\n\nexport const removeParticipant = (userId) => {\n  return {\n    type: REMOVE_PARTICIPANT,\n    payload: {\n      id: userId,\n    },\n  };\n};\n","import React, { useRef, useEffect } from \"react\";\nimport MeetingFooter from \"../MeetingFooter/MeetingFooter.component\";\nimport Participants from \"../Participants/Participants.component\";\nimport \"./MainScreen.css\";\nimport { connect } from \"react-redux\";\nimport { setMainStream, updateUser } from \"../../store/actioncreator\";\n\nconst MainScreen = (props) => {\n  const participantRef = useRef(props.participants);\n\n  const onMicClick = (micEnabled) => {\n    if (props.stream) {\n      props.stream.getAudioTracks()[0].enabled = micEnabled;\n      props.updateUser({ audio: micEnabled });\n    }\n  };\n  const onVideoClick = (videoEnabled) => {\n    if (props.stream) {\n      props.stream.getVideoTracks()[0].enabled = videoEnabled;\n      props.updateUser({ video: videoEnabled });\n    }\n  };\n\n  useEffect(() => {\n    participantRef.current = props.participants;\n  }, [props.participants]);\n\n  const updateStream = (stream) => {\n    for (let key in participantRef.current) {\n      const sender = participantRef.current[key];\n      if (sender.currentUser) continue;\n      const peerConnection = sender.peerConnection\n        .getSenders()\n        .find((s) => (s.track ? s.track.kind === \"video\" : false));\n      peerConnection.replaceTrack(stream.getVideoTracks()[0]);\n    }\n    props.setMainStream(stream);\n  };\n\n  const onScreenShareEnd = async () => {\n    const localStream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true,\n    });\n\n    localStream.getVideoTracks()[0].enabled = Object.values(\n      props.currentUser\n    )[0].video;\n\n    updateStream(localStream);\n\n    props.updateUser({ screen: false });\n  };\n\n  const onScreenClick = async () => {\n    let mediaStream;\n    if (navigator.getDisplayMedia) {\n      mediaStream = await navigator.getDisplayMedia({ video: true });\n    } else if (navigator.mediaDevices.getDisplayMedia) {\n      mediaStream = await navigator.mediaDevices.getDisplayMedia({\n        video: true,\n      });\n    } else {\n      mediaStream = await navigator.mediaDevices.getUserMedia({\n        video: { mediaSource: \"screen\" },\n      });\n    }\n\n    mediaStream.getVideoTracks()[0].onended = onScreenShareEnd;\n\n    updateStream(mediaStream);\n\n    props.updateUser({ screen: true });\n  };\n  return (\n    <div className=\"wrapper\">\n      <div className=\"main-screen\">\n        <Participants />\n      </div>\n\n      <div className=\"footer\">\n        <MeetingFooter\n          onScreenClick={onScreenClick}\n          onMicClick={onMicClick}\n          onVideoClick={onVideoClick}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    stream: state.mainStream,\n    participants: state.participants,\n    currentUser: state.currentUser,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setMainStream: (stream) => dispatch(setMainStream(stream)),\n    updateUser: (user) => dispatch(updateUser(user)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainScreen);\n","import firebase from \"firebase\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyC78-pB8Rs9aF3-L032uSx4n02YB4YEZhg\", // Add API Key\n  databaseURL:\"https://visio-app-a31a0-default-rtdb.europe-west1.firebasedatabase.app/\" // Add databaseURL\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const db = firebase;\n\nvar firepadRef = firebase.database().ref();\n\nexport const userName = prompt(\"What's your name?\");\nconst urlparams = new URLSearchParams(window.location.search);\nconst roomId = urlparams.get(\"id\");\n\nif (roomId) {\n  firepadRef = firepadRef.child(roomId);\n} else {\n  firepadRef = firepadRef.push();\n  window.history.replaceState(null, \"Meet\", \"?id=\" + firepadRef.key);\n}\n\nexport default firepadRef;\n","import MainScreen from \"./components/MainScreen/MainScreen.component\";\nimport firepadRef, { db, userName } from \"./server/firebase\";\nimport \"./App.css\";\nimport { useEffect } from \"react\";\nimport {\n  setMainStream,\n  addParticipant,\n  setUser,\n  removeParticipant,\n  updateParticipant,\n} from \"./store/actioncreator\";\nimport { connect } from \"react-redux\";\n\nfunction App(props) {\n  const getUserStream = async () => {\n    const localStream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true,\n    });\n\n    return localStream;\n  };\n  useEffect(async () => {\n    const stream = await getUserStream();\n    stream.getVideoTracks()[0].enabled = false;\n    props.setMainStream(stream);\n\n    connectedRef.on(\"value\", (snap) => {\n      if (snap.val()) {\n        const defaultPreference = {\n          audio: true,\n          video: false,\n          screen: false,\n        };\n        const userStatusRef = participantRef.push({\n          userName,\n          preferences: defaultPreference,\n        });\n        props.setUser({\n          [userStatusRef.key]: { name: userName, ...defaultPreference },\n        });\n        userStatusRef.onDisconnect().remove();\n      }\n    });\n  }, []);\n\n  const connectedRef = db.database().ref(\".info/connected\");\n  const participantRef = firepadRef.child(\"participants\");\n\n  const isUserSet = !!props.user;\n  const isStreamSet = !!props.stream;\n\n  useEffect(() => {\n    if (isStreamSet && isUserSet) {\n      participantRef.on(\"child_added\", (snap) => {\n        const preferenceUpdateEvent = participantRef\n          .child(snap.key)\n          .child(\"preferences\");\n        preferenceUpdateEvent.on(\"child_changed\", (preferenceSnap) => {\n          props.updateParticipant({\n            [snap.key]: {\n              [preferenceSnap.key]: preferenceSnap.val(),\n            },\n          });\n        });\n        const { userName: name, preferences = {} } = snap.val();\n        props.addParticipant({\n          [snap.key]: {\n            name,\n            ...preferences,\n          },\n        });\n      });\n      participantRef.on(\"child_removed\", (snap) => {\n        props.removeParticipant(snap.key);\n      });\n    }\n  }, [isStreamSet, isUserSet]);\n\n  return (\n    <div className=\"App\">\n      <MainScreen />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    stream: state.mainStream,\n    user: state.currentUser,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setMainStream: (stream) => dispatch(setMainStream(stream)),\n    addParticipant: (user) => dispatch(addParticipant(user)),\n    setUser: (user) => dispatch(setUser(user)),\n    removeParticipant: (userId) => dispatch(removeParticipant(userId)),\n    updateParticipant: (user) => dispatch(updateParticipant(user)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import firepadRef from \"./firebase\";\nimport { store } from \"../index\";\n\nconst participantRef = firepadRef.child(\"participants\");\n\nexport const updatePreference = (userId, preference) => {\n  const currentParticipantRef = participantRef\n    .child(userId)\n    .child(\"preferences\");\n  setTimeout(() => {\n    currentParticipantRef.update(preference);\n  });\n};\n\nexport const createOffer = async (peerConnection, receiverId, createdID) => {\n  const currentParticipantRef = participantRef.child(receiverId);\n  peerConnection.onicecandidate = (event) => {\n    event.candidate &&\n      currentParticipantRef\n        .child(\"offerCandidates\")\n        .push({ ...event.candidate.toJSON(), userId: createdID });\n  };\n\n  const offerDescription = await peerConnection.createOffer();\n  await peerConnection.setLocalDescription(offerDescription);\n\n  const offer = {\n    sdp: offerDescription.sdp,\n    type: offerDescription.type,\n    userId: createdID,\n  };\n\n  await currentParticipantRef.child(\"offers\").push().set({ offer });\n};\n\nexport const initializeListensers = async (userId) => {\n  const currentUserRef = participantRef.child(userId);\n\n  currentUserRef.child(\"offers\").on(\"child_added\", async (snapshot) => {\n    const data = snapshot.val();\n    if (data?.offer) {\n      const pc =\n        store.getState().participants[data.offer.userId].peerConnection;\n      await pc.setRemoteDescription(new RTCSessionDescription(data.offer));\n      await createAnswer(data.offer.userId, userId);\n    }\n  });\n\n  currentUserRef.child(\"offerCandidates\").on(\"child_added\", (snapshot) => {\n    const data = snapshot.val();\n    if (data.userId) {\n      const pc = store.getState().participants[data.userId].peerConnection;\n      pc.addIceCandidate(new RTCIceCandidate(data));\n    }\n  });\n\n  currentUserRef.child(\"answers\").on(\"child_added\", (snapshot) => {\n    const data = snapshot.val();\n    if (data?.answer) {\n      const pc =\n        store.getState().participants[data.answer.userId].peerConnection;\n      const answerDescription = new RTCSessionDescription(data.answer);\n      pc.setRemoteDescription(answerDescription);\n    }\n  });\n\n  currentUserRef.child(\"answerCandidates\").on(\"child_added\", (snapshot) => {\n    const data = snapshot.val();\n    if (data.userId) {\n      const pc = store.getState().participants[data.userId].peerConnection;\n      pc.addIceCandidate(new RTCIceCandidate(data));\n    }\n  });\n};\n\nconst createAnswer = async (otherUserId, userId) => {\n  const pc = store.getState().participants[otherUserId].peerConnection;\n  const participantRef1 = participantRef.child(otherUserId);\n  pc.onicecandidate = (event) => {\n    event.candidate &&\n      participantRef1\n        .child(\"answerCandidates\")\n        .push({ ...event.candidate.toJSON(), userId: userId });\n  };\n\n  const answerDescription = await pc.createAnswer();\n  await pc.setLocalDescription(answerDescription);\n\n  const answer = {\n    type: answerDescription.type,\n    sdp: answerDescription.sdp,\n    userId: userId,\n  };\n\n  await participantRef1.child(\"answers\").push().set({ answer });\n};\n","import {\n  SET_MAIN_STREAM,\n  ADD_PARTICIPANT,\n  SET_USER,\n  REMOVE_PARTICIPANT,\n  UPDATE_USER,\n  UPDATE_PARTICIPANT,\n} from \"./actiontypes\";\n\nimport {\n  createOffer,\n  initializeListensers,\n  updatePreference,\n} from \"../server/peerConnection\";\n\nlet defaultUserState = {\n  mainStream: null,\n  participants: {},\n  currentUser: null,\n};\n\nconst servers = {\n  iceServers: [\n    {\n      urls: [\n        \"stun:stun1.l.google.com:19302\",\n        \"stun:stun2.l.google.com:19302\",\n        \"stun:stun.l.google.com:19302\",\n        \"stun:stun3.l.google.com:19302\",\n        \"stun:stun4.l.google.com:19302\",\n        \"stun:stun.services.mozilla.com\",\n      ],\n    },\n  ],\n  iceCandidatePoolSize: 10,\n};\n\nconst generateColor = () =>\n  \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n\nexport const userReducer = (state = defaultUserState, action) => {\n  if (action.type === SET_MAIN_STREAM) {\n    let payload = action.payload;\n    state = { ...state, ...payload };\n    return state;\n  } else if (action.type === ADD_PARTICIPANT) {\n    let payload = action.payload;\n    const currentUserId = Object.keys(state.currentUser)[0];\n    const newUserId = Object.keys(payload.newUser)[0];\n    if (state.mainStream && currentUserId !== newUserId) {\n      payload.newUser = addConnection(\n        payload.newUser,\n        state.currentUser,\n        state.mainStream\n      );\n    }\n\n    if (currentUserId === newUserId)\n      payload.newUser[newUserId].currentUser = true;\n    payload.newUser[newUserId].avatarColor = generateColor();\n    let participants = { ...state.participants, ...payload.newUser };\n    state = { ...state, participants };\n    return state;\n  } else if (action.type === SET_USER) {\n    let payload = action.payload;\n    let participants = { ...state.participants };\n    const userId = Object.keys(payload.currentUser)[0];\n    payload.currentUser[userId].avatarColor = generateColor();\n    initializeListensers(userId);\n    state = { ...state, currentUser: { ...payload.currentUser }, participants };\n    return state;\n  } else if (action.type === REMOVE_PARTICIPANT) {\n    let payload = action.payload;\n    let participants = { ...state.participants };\n    delete participants[payload.id];\n    state = { ...state, participants };\n    return state;\n  } else if (action.type === UPDATE_USER) {\n    let payload = action.payload;\n    const userId = Object.keys(state.currentUser)[0];\n    updatePreference(userId, payload.currentUser);\n    state.currentUser[userId] = {\n      ...state.currentUser[userId],\n      ...payload.currentUser,\n    };\n    state = {\n      ...state,\n      currentUser: { ...state.currentUser },\n    };\n    return state;\n  } else if (action.type === UPDATE_PARTICIPANT) {\n    let payload = action.payload;\n    const newUserId = Object.keys(payload.newUser)[0];\n\n    payload.newUser[newUserId] = {\n      ...state.participants[newUserId],\n      ...payload.newUser[newUserId],\n    };\n    let participants = { ...state.participants, ...payload.newUser };\n    state = { ...state, participants };\n    return state;\n  }\n  return state;\n};\n\nconst addConnection = (newUser, currentUser, stream) => {\n  const peerConnection = new RTCPeerConnection(servers);\n  stream.getTracks().forEach((track) => {\n    peerConnection.addTrack(track, stream);\n  });\n  const newUserId = Object.keys(newUser)[0];\n  const currentUserId = Object.keys(currentUser)[0];\n\n  const offerIds = [newUserId, currentUserId].sort((a, b) =>\n    a.localeCompare(b)\n  );\n\n  newUser[newUserId].peerConnection = peerConnection;\n  if (offerIds[0] !== currentUserId)\n    createOffer(peerConnection, offerIds[0], offerIds[1]);\n  return newUser;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { userReducer } from \"./store/reducer\";\n\nexport const store = createStore(userReducer);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}